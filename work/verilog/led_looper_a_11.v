/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module led_looper_a_11 (
    input clk,
    input rst,
    input [15:0] reg_a,
    input [15:0] reg_b,
    input [15:0] reg_c,
    input [3:0] timer,
    input [3:0] scoreboard_1,
    input [3:0] scoreboard_2,
    output reg [15:0] led_a_rom_address,
    output reg [15:0] led_b_rom_address,
    output reg [15:0] led_c_rom_address,
    output reg [15:0] timer_rom_address,
    output reg [15:0] scoreboard_1_rom_address,
    output reg [15:0] scoreboard_2_rom_address,
    output reg [3:0] pixel
  );
  
  
  
  wire [3-1:0] M_looper_value;
  counter_23 looper (
    .clk(clk),
    .rst(rst),
    .value(M_looper_value)
  );
  
  wire [16-1:0] M_modulusA_out;
  reg [16-1:0] M_modulusA_a;
  reg [16-1:0] M_modulusA_b;
  modulus_24 modulusA (
    .a(M_modulusA_a),
    .b(M_modulusA_b),
    .out(M_modulusA_out)
  );
  
  wire [16-1:0] M_modulusB_out;
  reg [16-1:0] M_modulusB_a;
  reg [16-1:0] M_modulusB_b;
  modulus_24 modulusB (
    .a(M_modulusB_a),
    .b(M_modulusB_b),
    .out(M_modulusB_out)
  );
  
  wire [16-1:0] M_modulusC_out;
  reg [16-1:0] M_modulusC_a;
  reg [16-1:0] M_modulusC_b;
  modulus_24 modulusC (
    .a(M_modulusC_a),
    .b(M_modulusC_b),
    .out(M_modulusC_out)
  );
  
  always @* begin
    pixel = 1'h0;
    M_modulusA_a = reg_a + M_looper_value;
    M_modulusB_a = reg_b + M_looper_value;
    M_modulusC_a = reg_c + M_looper_value;
    M_modulusA_b = 6'h20;
    M_modulusB_b = 6'h20;
    M_modulusC_b = 6'h20;
    led_a_rom_address = M_modulusA_out;
    led_b_rom_address = M_modulusB_out;
    led_c_rom_address = M_modulusC_out;
    timer_rom_address = timer * 4'h8 + M_looper_value;
    scoreboard_1_rom_address = scoreboard_1 * 4'h8 + M_looper_value;
    scoreboard_2_rom_address = scoreboard_2 * 4'h8 + M_looper_value;
    pixel = M_looper_value;
  end
endmodule
