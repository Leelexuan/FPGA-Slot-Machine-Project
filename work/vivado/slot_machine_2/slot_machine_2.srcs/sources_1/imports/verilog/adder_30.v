/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_30 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn_signal,
    output reg [15:0] out,
    output reg [2:0] zvn
  );
  
  
  
  reg [15:0] sum;
  
  always @* begin
    sum = 16'h0000;
    
    case (alufn_signal[0+0-:1])
      1'h0: begin
        sum = a + b;
      end
      1'h1: begin
        sum = a - b;
      end
      default: begin
        sum = 16'h0000;
      end
    endcase
    zvn[0+0-:1] = sum[15+0-:1];
    zvn[1+0-:1] = (((alufn_signal[0+0-:1] ^ b[15+0-:1]) & a[15+0-:1]) & !sum[15+0-:1]) || ((!(alufn_signal[0+0-:1] ^ b[15+0-:1]) & !a[15+0-:1]) & sum[15+0-:1]);
    zvn[2+0-:1] = ~(|sum);
    out = sum;
  end
endmodule
